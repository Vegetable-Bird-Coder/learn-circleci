version: 2.1

orbs:
  coveralls: coveralls/coveralls@2.2.5

parameters:
  run_go_test:
    type: boolean
    default: false

jobs:
  go_test:
    docker:
      - image: cimg/go:1.24.1
    steps:
      - checkout
      # 添加此步骤来启用 SSH 密钥
      - add_ssh_keys:
          # 在这里填写你在 CircleCI UI 中看到的 SSH 密钥的 Fingerprint (指纹)。
          # 例如: fingerprints: "ab:cd:ef:gh:ij:kl:mn:op:qr:st:uv:wx:yz:01:23:45"
          # 如果你只添加了一个额外密钥且没有其他用途，也可以省略 fingerprints 参数
          # 这样会添加所有在 Additional SSH Keys 下的密钥。
          # 但明确指定指纹更安全。
          fingerprints:
            - "SHA256:LzoU0FR46y2axEXYuQfKVht59JkaVYyvB4YZOcWdHpo" # 替换为你在 CircleCI UI 中看到的指纹

      # 确保 GOPATH/bin 在 PATH 中
      - run:
          name: Setup Go Environment
          command: |
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
            go env

      # 安装 go-lcov 工具 (现在应该能通过 SSH 访问 GitHub)
      - run:
          name: Install go-lcov
          command: |
            go install github.com/jstemmer/go-lcov@latest
            which go-lcov || { echo "go-lcov not found in PATH!"; exit 1; }
            go-lcov --version || { echo "go-lcov failed to run!"; exit 1; }

      # ... 后续的生成覆盖率和上传步骤不变 ...
      - run:
          name: Run Go tests and generate raw coverage.out
          command: |
            rm -f coverage.out
            go test -v -coverprofile=coverage.out ./...
            if [ ! -s coverage.out ]; then
              echo "ERROR: coverage.out was not generated or is empty!"
              exit 1
            fi

      - run:
          name: Convert coverage.out to LCOV
          command: |
            rm -f coverage.lcov
            go-lcov -v coverage.out > coverage.lcov
            if [ ! -s coverage.lcov ]; then
              echo "ERROR: coverage.lcov was not generated or is empty after conversion!"
              exit 1
            fi

      - run:
          name: Verify final coverage.lcov content
          command: |
            echo "--- Contents of final coverage.lcov ---"
            cat coverage.lcov || echo "ERROR: coverage.lcov is missing!"
            echo "---------------------------------------"
            if ! grep -q "SF:" coverage.lcov; then
              echo "WARNING: coverage.lcov does not appear to be valid LCOV format (missing SF: lines)."
              exit 1
            fi
            if grep -q "mode: atomic" coverage.lcov; then
              echo "WARNING: coverage.lcov still contains raw Go coverprofile format!"
              exit 1
            fi

      - coveralls/upload:
          coverage_file: coverage.lcov
          coverage_format: lcov
          compare_ref: main

workflows:
  test:
    when: << pipeline.parameters.run_go_test >>
    jobs:
      - go_test
