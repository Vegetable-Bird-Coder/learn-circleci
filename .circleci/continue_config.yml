version: 2.1

orbs:
  coveralls: coveralls/coveralls@2.2.5

parameters:
  run_go_test:
    type: boolean
    default: false

jobs:
  go_test:
    docker:
      # 替换为通用操作系统镜像
      - image: cimg/go:1.24.1
    steps:
      - checkout

      # ⚠️ 确保 add_ssh_keys 存在且配置正确
      - add_ssh_keys:
          fingerprints:
            - "SHA256:LzoU0FR46y2axEXYuQfKVht59JkaVYyvB4YZOcWdHpo" # 再次确认你的密钥指纹

      # Setup Go Environment and Force SSH for Git
      - run:
          name: Setup Go Environment and Force SSH for Git
          command: |
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
            echo 'export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"' >> $BASH_ENV
            git config --global url."git@github.com:".insteadOf "https://github.com/"
            source $BASH_ENV
            go env
            echo "GIT_SSH_COMMAND: $GIT_SSH_COMMAND"

      # --- Install go-acc tool ---
      # This step is now working correctly, downloading via SSH.
      - run:
          name: Install go-acc
          command: |
            go install github.com/ory/go-acc@latest
            which go-acc || { echo "go-acc not found in PATH!"; exit 1; }
            # REMOVED: go-acc --version (as it's not supported by this go-acc version)
            echo "go-acc installed successfully!"
      # --- Install go-acc tool end ---

      # Run Go tests and generate LCOV format coverage (using go-acc)
      - run:
          name: Run Go tests and generate LCOV coverage
          command: |
            rm -f coverage.lcov # Clean up old LCOV file
            # This command is correct for generating coverage with go-acc
            go-acc -o coverage.lcov ./...
            if [ ! -s coverage.lcov ]; then
              echo "ERROR: coverage.lcov was not generated or is empty!"
              exit 1
            fi

      # Debugging steps: Verify final coverage.lcov content (keep until successful)
      - run:
          name: Verify final coverage.lcov content
          command: |
            echo "--- Contents of final coverage.lcov ---"
            cat coverage.lcov || echo "ERROR: coverage.lcov is missing!"
            echo "---------------------------------------"
            # Explicitly check for LCOV flags
            if ! grep -q "SF:" coverage.lcov; then
              echo "WARNING: coverage.lcov does not appear to be valid LCOV format (missing SF: lines)."
              exit 1
            fi
            if grep -q "mode: atomic" coverage.lcov; then
              echo "WARNING: coverage.lcov still contains raw Go coverprofile format!"
              exit 1
            fi

      # Upload coverage report to Coveralls
      - coveralls/upload:
          coverage_file: coverage.lcov
          coverage_format: lcov
          compare_ref: main

workflows:
  test:
    when: << pipeline.parameters.run_go_test >>
    jobs:
      - go_test
